package com.bakuard.flashcards.model.auth.resource;

/**
 * Представляет одно из свойств для некоторого ресурса({@link Resource}), к которому требуется ограничить
 * доступ для разных пользователей или свойство некоторого пользователя
 * ({@link com.bakuard.flashcards.model.auth.credential.Principal}), который запрашивает доступ к некоторому
 * ресурсу. Каждое свойство представлено в виде пары ключ-значение.
 * @param key наименование свойства.
 * @param value значение свойства.
 */
public record Param(String key, Object value) {

    /**
     * Проверяет - имеет ли значение данного свойства указанный тип или супер-тип.
     * @param type предполагаемый тип значения данного свойства.
     * @return true - если описанное выше условие выполняется.
     */
    public boolean isValueType(Class<?> type) {
        return type.isInstance(value);
    }

    /**
     * Пытается преобразовать значение свойства к указанным типу. Если значение свойства имеет
     * совместимый тип - возвращает его преобразованным к указанному типу данных. Если нет - выбрасывает
     * ClassCastException.
     * @param type тип к которому выполняется преобразование значения свойства.
     * @return преобразованное значение свойства к указанному типу.
     * @param <T> указанный тип значения свойства.
     */
    public <T> T valueAs(Class<T> type) {
        return type.cast(value);
    }

}